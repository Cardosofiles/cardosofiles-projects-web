import type { Metadata } from 'next'
import { cookies } from 'next/headers'

import '@/styles/globals.css'
import { geistMono, geistSans } from '@/utils/fonts'

import { ActiveThemeProvider } from '@/components/themes/theme-active'
import { cn } from '@/lib/utils'

import { Header } from '@/components/layout/header'
import { NextThemeProvider } from '@/providers/next-theme'
import TanstackQueryProvider from '@/providers/tanstack-query'

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
}

/* eslint-disable @typescript-eslint/no-unused-vars */
const META_THEME_COLORS = {
  light: '#ffffff',
  dark: '#09090b',
}

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode
}>) {
  const cookieStore = await cookies()
  const activeThemeValue = cookieStore.get('active_theme')?.value
  const isScaled = activeThemeValue?.endsWith('-scaled')

  return (
    <html
      lang="pt-BR"
      suppressHydrationWarning
      className={`${geistSans.variable} ${geistMono.variable} bg antialiased`}
    >
      <body
        className={cn(
          // default styles
          'bg-background relative overscroll-none font-sans antialiased',
          // active theme styles
          activeThemeValue ? `theme-${activeThemeValue}` : '',
          // scaled theme styles
          isScaled ? 'theme-scaled' : ''
        )}
      >
        <TanstackQueryProvider>
          <NextThemeProvider
            attribute="class"
            defaultTheme="system"
            enableSystem
            disableTransitionOnChange
          >
            <ActiveThemeProvider initialTheme={activeThemeValue}>
              <Header />
              <div className="h-16" /> {/* Spacer for fixed header */}
              <main className="mt-2">{children}</main>
            </ActiveThemeProvider>
          </NextThemeProvider>
        </TanstackQueryProvider>
      </body>
    </html>
  )
}
